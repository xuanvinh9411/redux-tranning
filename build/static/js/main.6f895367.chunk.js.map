{"version":3,"sources":["components/TaskForm.js","components/SearchForm.js","components/SortForm.js","components/HeaderList.js","components/InputList.js","components/DetailForm.js","components/ListForm.js","App.js","serviceWorker.js","index.js"],"names":["TaskForm","props","closeForm","onChange","event","target","name","value","setState","onSubmit","preventDefault","state","onClear","status","id","this","task","nextProps","className","onClick","type","required","React","Component","SearchForm","onSearch","keyword","placeholder","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","role","HearderList","InputList","onFilter","filterName","filterStatus","ListForm","onUpdateStatus","onDelete","onUpdate","index","tasks","elmTasks","map","DetailForm","keys","key","HeaderList","App","onGenerateData","generateID","localStorage","setItem","JSON","stringify","addForm","isDisplayForm","tasksEditing","showForm","data","push","findIndex","result","forEach","splice","parseInt","filter","toLowerCase","keywords","getItem","parse","Math","floor","random","toString","substring","s4","indexOf","elmTaskForm","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6f895367.chunk.js","sourcesContent":["import React from 'react';\n\nclass TaskForm extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            id : '',\n            name : '',\n            status: false\n        }\n    }\n    componentWillMount(){\n        if(this.props.task){\n             this.setState({\n                 id : this.props.task.id,\n                 name : this.props.task.name,\n                 status : this.props.task.status\n             })\n        }\n    }\n    componentWillReceiveProps(nextProps){\n        if(nextProps && nextProps.task ){\n            this.setState({\n                id: nextProps.task.id,\n                name: nextProps.task.name,\n                status: nextProps.task.status\n            })\n        }else if(nextProps && nextProps.task === null)\n        {\n            this.setState({\n                id : '',\n                name : '',\n                status: false\n            })\n        }\n    }\n    closeForm =() =>{\n        this.props.closeForm()\n    }\n    onChange =(event)=>{\n        var target = event.target;\n        var name = target.name;\n        var value = target.value\n        if(name ==='status' ){\n            value = target.value === \"true\" ?  true :  false\n        }\n        this.setState({\n        [name] : value\n        });\n    }\n    onSubmit =(event) =>{\n        event.preventDefault();\n         this.props.onSubmit(this.state);\n         this.onClear();\n         this.closeForm();\n    }\n    onClear =() =>{\n        this.setState({\n            name : '',\n            status: false\n        })\n    }\n    render() {\n        var { id } = this.state;\n  return (\n    <div className=\"panel panel-warning\">\n        <div className=\"panel-heading\">\n            <h3 className=\"panel-title\">\n            { id === null || id ===  '' ?  'Thêm Công Việc' : '\bCập nhật công việc '} \n            <span \n            className=\"fa fa-times-circle text-right\" \n            onClick ={this.closeForm }\n            >\n                 </span>\n            </h3>   \n        </div>\n        <div className=\"panel-body\">\n            <form \n            onSubmit={this.onSubmit}\n             >\n                <div className=\"form-group\">\n                    <label>Tên :</label>\n                    <input \n                    type=\"text\" \n                    className=\"form-control\" \n                    name=\"name\" \n                    value = {this.state.name}\n                    onChange = {this.onChange}\n                    />\n                </div>\n                <label>Trạng Thái :</label>\n                <select \n                    className=\"form-control\" \n                    required=\"required\"\n                    name=\"status\" \n                    value = {this.state.status}\n                    onChange = {this.onChange}\n                    >\n                    <option value={true}>Kích Hoạt</option>\n                    <option value={false}>Ẩn</option>\n                </select>\n                <br/>\n                <div className=\"text-center\">\n                    <button type=\"submit\" className=\"btn btn-warning\">Thêm</button>&nbsp;\n                    <button \n                        type=\"button\"\n                        onClick={this.onClear} \n                        className=\"btn btn-danger\">\n                            Hủy Bỏ\n                    </button>\n                </div>\n            </form>\n        </div>\n    </div>\n  );\n}\n}\n\nexport default TaskForm;\n","import React from 'react';\nimport SortForm from './SortForm';\n\nclass SearchForm extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      keyword : ''\n    }\n  }\n\n  onChange =(event) =>{\n    var target = event.target;\n    var name = target.name;\n    var value = target.value;\n    this.setState({\n      [name] : value\n    })\n  }\n\n  onSearch =() =>{\n    this.props.onSearch(this.state)\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\n          <div className=\"input-group\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Nhập từ khóa...\"\n              name=\"keyword\"\n              onChange={this.onChange}\n            />\n            <span className=\"input-group-btn\">\n              <button \n                className=\"btn btn-primary\" \n                type=\"button\"\n                onClick={this.onSearch}\n                >\n                <span className=\"fa fa-search mr-5\"></span>Tìm\n                 </button>\n            </span>\n          </div>\n        </div>\n        <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\n          <div className=\"dropdown\">\n            <button className=\"btn btn-primary dropdown-toggle\" type=\"button\" id=\"dropdownMenu1\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\n              Sắp Xếp <span className=\"fa fa-caret-square-o-down ml-5\"></span>\n            </button>\n            <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\n              <li>\n                <a role=\"button\">\n                  <span className=\"fa fa-sort-alpha-asc pr-5\">\n                    Tên A-Z\n                        </span>\n                </a>\n              </li>\n              <li>\n                <a role=\"button\">\n                  <span className=\"fa fa-sort-alpha-desc pr-5\">\n                    Tên Z-A\n                        </span>\n                </a>\n              </li>\n              <li role=\"separator\" className=\"divider\"></li>\n              <li><a role=\"button\">Trạng Thái Kích Hoạt</a></li>\n              <li><a role=\"button\">Trạng Thái Ẩn</a></li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchForm;\n","import React from 'react';\n\nclass SortFrom extends React.Component {\n  render() {\n  return (\n<div className=\"dropdown\">\n    <button className=\"btn btn-primary dropdown-toggle\" type=\"button\" id=\"dropdownMenu1\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\n        Sắp Xếp <span className=\"fa fa-caret-square-o-down ml-5\"></span>\n    </button>\n    <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\n        <li>\n            <a role=\"button\">\n                        <span className=\"fa fa-sort-alpha-asc pr-5\">\n                            Tên A-Z\n                        </span>\n                    </a>\n        </li>\n        <li>\n            <a role=\"button\">\n                        <span className=\"fa fa-sort-alpha-desc pr-5\">\n                            Tên Z-A\n                        </span>\n                    </a>\n        </li>\n        <li role=\"separator\" className=\"divider\"></li>\n        <li><a role=\"button\">Trạng Thái Kích Hoạt</a></li>\n        <li><a role=\"button\">Trạng Thái Ẩn</a></li>\n    </ul>\n</div>\n  );\n}\n}\n\nexport default SortFrom;\n\n\n\n","import React from 'react';\n\nclass HearderList extends React.Component {\n  render() {\n  return (\n    <thead>\n    <tr>\n        <th className=\"text-center\">STT</th>\n        <th className=\"text-center\">Tên</th>\n        <th className=\"text-center\">Trạng Thái</th>\n        <th className=\"text-center\">Hành Động</th>\n    </tr>\n</thead>\n\n  );\n}\n}\n\nexport default HearderList;\n","import React from 'react';\n\nclass InputList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            filterName: '',\n            filterStatus: -1\n        }\n    }\n\n    onChange = (event) => {\n        var target = event.target;\n        var name = target.name;\n        var value = target.value\n        this.props.onFilter(\n            name === 'filterName' ? value : this.state.filterName,\n            name === 'filterStatus' ? value : this.state.filterStatus,\n        )\n        this.setState({\n            [name] : value\n        })\n\n    }\n\n    render() {\n        var { filterName, filterStatus } = this.state\n        return (\n            <tr>\n                <td></td>\n                <td>\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        name=\"filterName\"\n                        onChange={this.onChange}\n                        value={filterName}\n                    >\n                    </input>\n                </td>\n                <td>\n                    <select\n                        className=\"form-control\"\n                        name=\"filterStatus\"\n                        onChange={this.onChange}\n                        value={filterStatus}\n                    >\n                        <option value=\"-1\">Tất Cả</option>\n                        <option value=\"0\">Ẩn</option>\n                        <option value=\"1\">Kích Hoạt</option>\n                    </select>\n                </td>\n                <td></td>\n            </tr>\n        );\n    }\n}\n\nexport default InputList;\n","import React from 'react';\n\nclass ListForm extends React.Component {\n    onUpdateStatus =() =>{\n        this.props.onUpdateStatus(this.props.task.id)\n     }\n     onDelete =() =>{\n        this.props.onDelete(this.props.task.id)\n     }\n     onUpdate =() =>{\n        this.props.onUpdate(this.props.task.id)\n     }\n     \n  render() {\n      var{ task , index} = this.props;\n  return (\n            <tr>\n                <td>{ index }</td>\n                <td>{ task.name }</td>\n                <td className=\"text-center\">\n                    <span \n                    className={ task.status === true ? 'label label-info' : 'label label-danger' }\n                    onClick={ this.onUpdateStatus }\n                    >\n                                { task.status === true ? \"Kích hoạt\" : \"Ẩn\"}\n                            </span>\n                </td>\n                <td className=\"text-center\">\n                    <button \n                        type=\"button\" \n                        className=\"btn btn-warning\"\n                        onClick = { this.onUpdate }\n                        >\n                        <span className=\"fa fa-pencil mr-5\"></span>Sửa\n                    </button>\n                    &nbsp;\n                    <button \n                        type=\"button\" \n                        className=\"btn btn-danger\"\n                        onClick = { this.onDelete }\n                        >\n                        <span className=\"fa fa-trash mr-5\"></span>Xóa\n                    </button>\n                </td>\n            </tr>\n  );\n}\n}\n\nexport default ListForm;\n","import React from 'react';\nimport HeaderList from './HeaderList'\nimport InputList from './InputList'\nimport DetailForm from './DetailForm'\n\nclass ListForm extends React.Component {\n  render(){\n    var { tasks  } = this.props;\n    var elmTasks = tasks.map((task, index) => {\n      return <DetailForm\n       keys={ tasks.id }\n       key={ index }\n       index={ index }\n        task={ task }\n        onUpdateStatus={ this.props.onUpdateStatus }\n        onDelete = { this.props.onDelete }\n        onUpdate = { this.props.onUpdate }\n        />\n    });\n  return (\n    <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n    <table className=\"table table-bordered table-hover\">\n        <HeaderList/>\n        <tbody>\n            <InputList\n              onFilter = { this.props.onFilter }\n              />\n            { elmTasks }\n        </tbody>\n    </table>\n</div>\n  );\n}\n}\n\nexport default ListForm;\n","import React from 'react';\nimport './App.css';\nimport TaskForm from './components/TaskForm';\nimport SearchForm from './components/SearchForm';\nimport ListForm from './components/ListForm';\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            tasks: [\n\n            ],\n            tasksEditing: [\n\n            ],\n            isDisplayForm: false\n            ,\n            filter :{\n                name : '',\n                status: -1\n                \n            }\n            ,\n            keyword : '',\n        }\n    }\n    componentWillMount() {\n        if (localStorage && localStorage.getItem('tasks')) {\n            var tasks = JSON.parse(localStorage.getItem('tasks'));\n            this.setState({\n                tasks: tasks\n            });\n        }\n    }\n    onGenerateData = () => {\n        var tasks = [\n            {\n                id: this.generateID(),\n                name: 'Học lạp trình1',\n                status: true\n            },\n\n            {\n                id: this.generateID(),\n                name: 'Học lạp trình2',\n                status: false\n            },\n            {\n                id: this.generateID(),\n                name: 'Học lạp trình3',\n                status: false\n            }\n        ];\n        this.setState({\n            tasks: tasks\n        });\n        localStorage.setItem('tasks', JSON.stringify(tasks));\n    }\n\n    addForm = () => {\n        if (this.state.isDisplayForm && this.state.tasksEditing !== null) {\n            this.setState({\n                isDisplayForm: true,\n                tasksEditing: null\n            })\n        }\n        else {\n            this.setState({\n                isDisplayForm: !this.state.isDisplayForm,\n                tasksEditing: null\n            })\n        }\n\n    }\n\n    closeForm = () => {\n        this.setState({\n            isDisplayForm: !this.state.isDisplayForm\n        })\n    }\n\n    showForm = () => {\n        this.setState({\n            isDisplayForm: true\n        })\n    }\n\n    s4() {\n        return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n    }\n    generateID() {\n        return this.s4() + this.s4() + '_' + this.s4() + '_'\n    }\n    onSubmit = (data) => {\n        var tasks = this.state.tasks;\n        if (data.id === null || data.id === \"\") {\n            data.id = this.generateID();\n            tasks.push(data);\n        }\n        else {\n            var index = this.findIndex(data.id);\n            tasks[index] = data;\n        }\n        this.setState(\n            {\n                tasks: tasks,\n                tasksEditing: null\n            }\n        )\n        localStorage.setItem('tasks', JSON.stringify(tasks));\n    }\n    onUpdateStatus = (id) => {\n        var { tasks } = this.state;\n        var index = this.findIndex(id);\n        if (index !== -1) {\n            tasks[index].status = !tasks[index].status\n            this.setState({\n                tasks: tasks\n            })\n        }\n        localStorage.setItem('tasks', JSON.stringify(tasks));\n\n    }\n    findIndex = (id) => {\n        var { tasks } = this.state;\n        var result = -1;\n        tasks.forEach((task, index) => {\n            if (task.id === id) {\n                result = index;\n            }\n        });\n        return result;\n    }\n    onDelete = (id) => {\n        var { tasks } = this.state;\n        var index = this.findIndex(id);\n        if (index !== -1) {\n            tasks.splice(index, 1);\n            this.setState({\n                tasks: tasks\n            })\n        }\n        localStorage.setItem('tasks', JSON.stringify(tasks));\n        this.closeForm()\n    }\n\n    onUpdate = (id) => {\n        var { tasks } = this.state\n        var index = this.findIndex(id);\n        var tasksEditing = tasks[index]\n        this.setState({\n            tasksEditing: tasksEditing\n        })\n        this.showForm();\n    }\n\n    onFilter = (filterName,filterStatus) => {\n        filterStatus =   parseInt(filterStatus)\n        this.setState({\n            filter : {\n                name : filterName.toLowerCase(),\n                status : filterStatus\n            }\n        })\n    }\n\n    onSearch =(keywords) =>{\n        this.setState({\n            keyword : keywords\n        })\n    }\n\n    render() {\n        var { tasks, isDisplayForm, tasksEditing , filter ,keyword } = this.state;\n            if(filter){\n                if(filter.name){\n                    tasks = tasks.filter( task => {\n                         return task.name.toLowerCase().indexOf(filter.name) !== -1 ;\n                    });\n                }\n                tasks = tasks.filter(task =>{\n                    if(filter.status == -1){\n                        return task\n                    }else{\n                        return task.status === (filter.status === 1 ? true : false)\n                    }\n                })\n            }\n            if(keyword && keyword !== \"\"){\n                tasks = tasks.filter( (task) => {\n                    return task.name.toLowerCase().indexOf(keyword);\n               });\n            }\n\n\n        var elmTaskForm = isDisplayForm\n            ? <TaskForm\n                onSubmit={this.onSubmit}\n                closeForm={this.closeForm}\n                task={tasksEditing}\n            />\n            : '';\n        return (\n            <div className=\"container\">\n                <div className=\"text-center\">\n                    <h1>Quản Lý Công Việc</h1>\n                    <hr />\n                </div>\n                <div className=\"row\">\n                    <div className={isDisplayForm ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : ''}>\n                        {elmTaskForm}\n                    </div>\n                    <div className={isDisplayForm ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12'}>\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-primary\"\n                            onClick={this.addForm}\n                        >\n                            <span className=\"fa fa-plus mr-5\"></span>Thêm Công Việc\n              </button>\n                        <div className=\"row mt-15\">\n                            <SearchForm\n                            onSearch = {this.onSearch}\n                            />\n                        </div>\n                        <div className=\"row mt-15\">\n                            <ListForm\n                                tasks={tasks}\n                                onUpdateStatus={this.onUpdateStatus}\n                                onDelete={this.onDelete}\n                                onUpdate={this.onUpdate}\n                                onFilter={this.onFilter}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}