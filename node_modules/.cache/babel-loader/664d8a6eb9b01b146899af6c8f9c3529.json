{"ast":null,"code":"import { createStore } from 'redux';\nvar initialState = {\n  status: false,\n  sort: {\n    by: 'name',\n    value: 1\n  }\n};\n\nvar myReducer = (state = initialState, action) => {\n  if (action.type === 'TOGGLE_STATUS') {\n    state.status = !state.status;\n    return state;\n  }\n\n  if (action.type === 'SORT') {\n    state.sort = {\n      by: action.sort.by,\n      value: action.sort.value\n    };\n    return state;\n  }\n};\n\nconst store = createStore(myReducer); //thực hiện thay đổi stetus \n\nvar action = {\n  type: 'TOGGLE_STATUS'\n};\nstore.dispatch(action); // thực hiện sort z-a\n\nvar sortaction = {\n  type: 'SORT',\n  sort: {\n    by: 'name',\n    value: -1\n  }\n};\nstore.dispatch(sortaction);\nconsole.log(store.getState());","map":{"version":3,"sources":["/Users/vinh-lx/Desktop/redux-traning/src/trainning/demo.js"],"names":["createStore","initialState","status","sort","by","value","myReducer","state","action","type","store","dispatch","sortaction","console","log","getState"],"mappings":"AAAA,SAASA,WAAT,QAA2B,OAA3B;AAGA,IAAIC,YAAY,GAAG;AACfC,EAAAA,MAAM,EAAG,KADM;AAEfC,EAAAA,IAAI,EAAG;AACHC,IAAAA,EAAE,EAAG,MADF;AAEHC,IAAAA,KAAK,EAAG;AAFL;AAFQ,CAAnB;;AAQA,IAAIC,SAAS,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAiC;AAC7C,MAAGA,MAAM,CAACC,IAAP,KAAgB,eAAnB,EACA;AACIF,IAAAA,KAAK,CAACL,MAAN,GAAe,CAACK,KAAK,CAACL,MAAtB;AACC,WAAOK,KAAP;AACJ;;AACD,MAAGC,MAAM,CAACC,IAAP,KAAgB,MAAnB,EACA;AACIF,IAAAA,KAAK,CAACJ,IAAN,GAAa;AACTC,MAAAA,EAAE,EAAGI,MAAM,CAACL,IAAP,CAAYC,EADR;AAETC,MAAAA,KAAK,EAAGG,MAAM,CAACL,IAAP,CAAYE;AAFX,KAAb;AAIC,WAAOE,KAAP;AACJ;AACJ,CAdD;;AAgBA,MAAMG,KAAK,GAAGV,WAAW,CAACM,SAAD,CAAzB,C,CAEA;;AACA,IAAIE,MAAM,GAAG;AAAEC,EAAAA,IAAI,EAAG;AAAT,CAAb;AAEAC,KAAK,CAACC,QAAN,CAAeH,MAAf,E,CAGA;;AACA,IAAII,UAAU,GAAG;AACbH,EAAAA,IAAI,EAAG,MADM;AAEbN,EAAAA,IAAI,EAAG;AACHC,IAAAA,EAAE,EAAG,MADF;AAEHC,IAAAA,KAAK,EAAG,CAAC;AAFN;AAFM,CAAjB;AAQAK,KAAK,CAACC,QAAN,CAAeC,UAAf;AAEAC,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACK,QAAN,EAAZ","sourcesContent":["import { createStore} from 'redux';\n\n\nvar initialState = {\n    status : false,\n    sort : {\n        by : 'name',\n        value : 1\n    }\n}\n\nvar myReducer = (state = initialState, action) =>{\n    if(action.type === 'TOGGLE_STATUS')\n    {\n        state.status = !state.status\n         return state\n    }\n    if(action.type === 'SORT')\n    {\n        state.sort = {\n            by : action.sort.by ,\n            value : action.sort.value\n        }\n         return state\n    }\n}\n\nconst store = createStore(myReducer);\n\n//thực hiện thay đổi stetus \nvar action = { type : 'TOGGLE_STATUS'}\n\nstore.dispatch(action)\n\n\n// thực hiện sort z-a\nvar sortaction = {\n    type : 'SORT',\n    sort : {\n        by : 'name',\n        value : -1\n    }\n}\n\nstore.dispatch(sortaction)\n\nconsole.log(store.getState())"]},"metadata":{},"sourceType":"module"}