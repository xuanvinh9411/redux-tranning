{"ast":null,"code":"import * as types from './../constants/ActionTypes'; // var initalState = [{\n//     id: 1,\n//     name: 'Học lạp trình1',\n//     status: true\n// },\n// {\n//     id: 2,\n//     name: 'Học lạp trình2',\n//     status: false\n// },]\n//     ;\n\ns4 = () => {\n  return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n};\n\ngenerateID = () => {\n  return s4() + s4() + '_' + s4() + '_';\n};\n\nvar Data = Json.parse(localStorage.getItem('tasks'));\nvar initalState = Data ? data : [];\nexport var tasks = (state = initalState, action) => {\n  switch (action.type) {\n    case types.LIST_ALL:\n      return state;\n\n    case types.ADD_TASK:\n      return state;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/vinh-lx/Desktop/redux-tranning/src/reducers/tasks.js"],"names":["types","s4","Math","floor","random","toString","substring","generateID","Data","Json","parse","localStorage","getItem","initalState","data","tasks","state","action","type","LIST_ALL","ADD_TASK"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,4BAAvB,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACAC,EAAE,GAAG,MAAM;AACP,SAAOC,IAAI,CAACC,KAAL,CAAW,CAAC,IAAID,IAAI,CAACE,MAAL,EAAL,IAAsB,OAAjC,EAA0CC,QAA1C,CAAmD,EAAnD,EAAuDC,SAAvD,CAAiE,CAAjE,CAAP;AACH,CAFD;;AAGAC,UAAU,GAAG,MAAM;AACf,SAAON,EAAE,KAAKA,EAAE,EAAT,GAAc,GAAd,GAAoBA,EAAE,EAAtB,GAA2B,GAAlC;AACH,CAFD;;AAIA,IAAIO,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAX;AACA,IAAIC,WAAW,GAAGL,IAAI,GAAGM,IAAH,GAAU,EAAhC;AACA,OAAO,IAAIC,KAAK,GAAG,CAACC,KAAK,GAAGH,WAAT,EAAsBI,MAAtB,KAAiC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKlB,KAAK,CAACmB,QAAX;AACI,aAAOH,KAAP;;AACJ,SAAKhB,KAAK,CAACoB,QAAX;AACI,aAAOJ,KAAP;;AACJ;AAAS,aAAOA,KAAP;AALb;AAOH,CARM","sourcesContent":["import * as types from './../constants/ActionTypes'\n\n// var initalState = [{\n//     id: 1,\n//     name: 'Học lạp trình1',\n//     status: true\n// },\n\n// {\n//     id: 2,\n//     name: 'Học lạp trình2',\n//     status: false\n// },]\n//     ;\ns4 = () => {\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n}\ngenerateID = () => {\n    return s4() + s4() + '_' + s4() + '_'\n}\n\nvar Data = Json.parse(localStorage.getItem('tasks'));\nvar initalState = Data ? data : [];\nexport var tasks = (state = initalState, action) => {\n    switch (action.type) {\n        case types.LIST_ALL:\n            return state;\n        case types.ADD_TASK:\n            return state;\n        default: return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}