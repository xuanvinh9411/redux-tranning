{"ast":null,"code":"var _jsxFileName = \"/Users/vinh-lx/Desktop/redux-tranning/src/components/TaskForm.js\";\nimport React from 'react';\nimport * as action from './../actions/index';\nimport { connect } from 'react-redux';\n\nclass TaskForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.closeForm = () => {\n      this.props.onCloseForm();\n    };\n\n    this.onChange = event => {\n      var target = event.target;\n      var name = target.name;\n      var value = target.value;\n\n      if (name === 'status') {\n        value = target.value === \"true\" ? true : false;\n      }\n\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.onSubmit = event => {\n      event.preventDefault();\n      this.props.onSaveTask(this.state);\n      this.onClear();\n      this.closeForm();\n    };\n\n    this.onClear = () => {\n      this.setState({\n        name: '',\n        status: true\n      });\n    };\n\n    this.state = {\n      id: '',\n      name: '',\n      status: 'true'\n    };\n  }\n\n  componentWillMount() {\n    if (this.props.task) {\n      this.setState({\n        id: this.props.task.id,\n        name: this.props.task.name,\n        status: this.props.task.status\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps && nextProps.itemEditing) {\n      this.setState({\n        id: nextProps.itemEditing.id,\n        name: nextProps.itemEditing.name,\n        status: nextProps.itemEditing.status\n      });\n    } else if (nextProps && nextProps.itemEditing === null) {\n      this.setState({\n        id: '',\n        name: '',\n        status: false\n      });\n    }\n  }\n\n  render() {\n    var id = this.props.id;\n    if (!this.props.isDisplayForm) return '';\n    return React.createElement(\"div\", {\n      className: \"panel panel-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"panel-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"panel-title cus-head-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, id === null || id === '' ? 'Thêm Công Việc' : '\bCập nhật công việc '), React.createElement(\"div\", {\n      className: \"fa fa-times-circle text-right cus-icon-left\",\n      onClick: this.closeForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"panel-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"T\\xEAn :\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"name\",\n      value: this.state.name,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Tr\\u1EA1ng Th\\xE1i :\"), React.createElement(\"select\", {\n      className: \"form-control\",\n      required: \"required\",\n      name: \"status\",\n      value: this.state.status,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"K\\xEDch Ho\\u1EA1t\"), React.createElement(\"option\", {\n      value: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"\\u1EA8n\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.onClear,\n      className: \"btn btn-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Th\\xEAm\"), \"\\xA0\", React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.onClear,\n      className: \"btn btn-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"H\\u1EE7y B\\u1ECF\")))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    tasks: state.tasks,\n    isDisplayForm: state.isDisplayForm,\n    itemEditing: state.itemEditing\n  };\n};\n\nconst mapDispatchToprops = (dispatch, props) => {\n  return {\n    onSaveTask: task => {\n      dispatch(action.saveTask(task));\n    },\n    onCloseForm: () => {\n      dispatch(action.closeform());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToprops)(TaskForm);","map":{"version":3,"sources":["/Users/vinh-lx/Desktop/redux-tranning/src/components/TaskForm.js"],"names":["React","action","connect","TaskForm","Component","constructor","props","closeForm","onCloseForm","onChange","event","target","name","value","setState","onSubmit","preventDefault","onSaveTask","state","onClear","status","id","componentWillMount","task","componentWillReceiveProps","nextProps","itemEditing","render","isDisplayForm","mapStateToProps","tasks","mapDispatchToprops","dispatch","saveTask","closeform"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as action from './../actions/index'\nimport { connect } from 'react-redux';\n\nclass TaskForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: '',\n            name: '',\n            status: 'true'\n        }\n    }\n    componentWillMount() {\n        if (this.props.task) {\n            this.setState({\n                id: this.props.task.id,\n                name: this.props.task.name,\n                status: this.props.task.status\n            })\n        }\n    }\n    componentWillReceiveProps(nextProps) {\n        if (nextProps && nextProps.itemEditing) {\n            this.setState({\n                id: nextProps.itemEditing.id,\n                name: nextProps.itemEditing.name,\n                status: nextProps.itemEditing.status\n            })\n        } else if (nextProps && nextProps.itemEditing === null) {\n            this.setState({\n                id: '',\n                name: '',\n                status: false\n            })\n        }\n    }\n    closeForm = () => {\n        this.props.onCloseForm()\n    }\n    onChange = (event) => {\n        var target = event.target;\n        var name = target.name;\n        var value = target.value\n        if (name === 'status') {\n            value = target.value === \"true\" ? true : false\n        }\n        this.setState({\n            [name]: value\n        });\n    }\n    onSubmit = (event) => {\n        event.preventDefault();\n        this.props.onSaveTask(this.state);\n        this.onClear();\n        this.closeForm();\n    }\n    onClear = () => {\n        this.setState({\n            name: '',\n            status: true\n        })\n    }\n    render() {\n        var { id } = this.props ;\n        if (!this.props.isDisplayForm) return '';\n        return (\n            <div className=\"panel panel-warning\">\n                <div className=\"panel-heading\">\n                    <div className=\"panel-title cus-head-left\">\n                        {id === null || id === '' ? 'Thêm Công Việc' : '\bCập nhật công việc '}\n                    </div>\n                    <div\n                        className=\"fa fa-times-circle text-right cus-icon-left\"\n                        onClick={this.closeForm}\n                    >\n                    </div>\n                </div>\n                <div className=\"panel-body\">\n                    <form\n                        onSubmit={this.onSubmit}\n                    >\n                        <div className=\"form-group\">\n                            <label>Tên :</label>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                name=\"name\"\n                                value={this.state.name}\n                                onChange={this.onChange}\n                            />\n                        </div>\n                        <label>Trạng Thái :</label>\n                        <select\n                            className=\"form-control\"\n                            required=\"required\"\n                            name=\"status\"\n                            value={this.state.status}\n                            onChange={this.onChange}\n                        >\n                            <option value={true}>Kích Hoạt</option>\n                            <option value={false}>Ẩn</option>\n                        </select>\n                        <br />\n                        <div className=\"text-center\">\n                            <button type=\"submit\"onClick={this.onClear} className=\"btn btn-warning\">Thêm</button>&nbsp;\n                    <button\n                                type=\"button\"\n                                onClick={this.onClear}\n                                className=\"btn btn-danger\">\n                                Hủy Bỏ\n                    </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        tasks: state.tasks,\n        isDisplayForm: state.isDisplayForm,\n        itemEditing : state.itemEditing\n    }\n};\nconst mapDispatchToprops = (dispatch, props) => {\n    return {\n        onSaveTask: (task) => {\n            dispatch(action.saveTask(task));\n        },\n        onCloseForm: () => {\n            dispatch(action.closeform())\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToprops)(TaskForm);\n\n"]},"metadata":{},"sourceType":"module"}