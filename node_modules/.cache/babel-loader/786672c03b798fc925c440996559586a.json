{"ast":null,"code":"var _jsxFileName = \"/Users/vinh-lx/Desktop/redux/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport TaskForm from './components/TaskForm';\nimport SearchForm from './components/SearchForm';\nimport ListForm from './components/ListForm';\nimport _ from 'lodash';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onGenerateData = () => {\n      var tasks = [{\n        id: this.generateID(),\n        name: 'Học lạp trình1',\n        status: true\n      }, {\n        id: this.generateID(),\n        name: 'Học lạp trình2',\n        status: false\n      }, {\n        id: this.generateID(),\n        name: 'Học lạp trình3',\n        status: false\n      }];\n      this.setState({\n        tasks: tasks\n      });\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    this.addForm = () => {\n      if (this.state.isDisplayForm && this.state.tasksEditing !== null) {\n        this.setState({\n          isDisplayForm: true,\n          tasksEditing: null\n        });\n      } else {\n        this.setState({\n          isDisplayForm: !this.state.isDisplayForm,\n          tasksEditing: null\n        });\n      }\n    };\n\n    this.closeForm = () => {\n      this.setState({\n        isDisplayForm: !this.state.isDisplayForm\n      });\n    };\n\n    this.showForm = () => {\n      this.setState({\n        isDisplayForm: true\n      });\n    };\n\n    this.onSubmit = data => {\n      var tasks = this.state.tasks;\n\n      if (data.id === null || data.id === \"\") {\n        data.id = this.generateID();\n        tasks.push(data);\n      } else {\n        var index = this.dindex(data.id);\n        tasks[index] = data;\n      }\n\n      this.setState({\n        tasks: tasks,\n        tasksEditing: null\n      });\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    this.onUpdateStatus = id => {\n      var tasks = this.state.tasks;\n\n      var index = _.findIndex(tasks, tasks => {\n        return tasks.id === id;\n      });\n\n      console.log(index, \"0\");\n      var index1 = this.findIndex(id);\n      console.log(index1, \"1\");\n\n      if (index !== -1) {\n        tasks[index].status = !tasks[index].status;\n        this.setState({\n          tasks: tasks\n        });\n      }\n\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    this.findIndex = id => {\n      var tasks = this.state.tasks;\n      var result = -1;\n      tasks.forEach((task, index) => {\n        if (task.id === id) {\n          result = index;\n        }\n      });\n      return result;\n    };\n\n    this.onDelete = id => {\n      var tasks = this.state.tasks;\n      var index = this.findIndex(id);\n\n      if (index !== -1) {\n        tasks.splice(index, 1);\n        this.setState({\n          tasks: tasks\n        });\n      }\n\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n      this.closeForm();\n    };\n\n    this.onUpdate = id => {\n      var tasks = this.state.tasks;\n      var index = this.findIndex(id);\n      var tasksEditing = tasks[index];\n      this.setState({\n        tasksEditing: tasksEditing\n      });\n      this.showForm();\n    };\n\n    this.onFilter = (filterName, filterStatus) => {\n      filterStatus = parseInt(filterStatus);\n      this.setState({\n        filter: {\n          name: filterName.toLowerCase(),\n          status: filterStatus\n        }\n      });\n    };\n\n    this.onSearch = keywords => {\n      this.setState({\n        keyword: keywords\n      });\n    };\n\n    this.onSort = (sortBy, sortValue) => {\n      this.setState({\n        sortBy: sortBy,\n        sortValue: sortValue\n      });\n    };\n\n    this.state = {\n      tasks: [],\n      tasksEditing: [],\n      isDisplayForm: false,\n      filter: {\n        name: '',\n        status: -1\n      },\n      keyword: '',\n      sortBy: 'name',\n      sortValue: 1\n    };\n  }\n\n  componentWillMount() {\n    if (localStorage && localStorage.getItem('tasks')) {\n      var tasks = JSON.parse(localStorage.getItem('tasks'));\n      this.setState({\n        tasks: tasks\n      });\n    }\n  }\n\n  s4() {\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n  }\n\n  generateID() {\n    return this.s4() + this.s4() + '_' + this.s4() + '_';\n  }\n\n  render() {\n    var _this$state = this.state,\n        tasks = _this$state.tasks,\n        isDisplayForm = _this$state.isDisplayForm,\n        tasksEditing = _this$state.tasksEditing,\n        filter = _this$state.filter,\n        keyword = _this$state.keyword,\n        sortBy = _this$state.sortBy,\n        sortValue = _this$state.sortValue;\n\n    if (filter) {\n      if (filter.name) {\n        tasks = tasks.filter(task => {\n          return task.name.toLowerCase().indexOf(filter.name) !== -1;\n        });\n      }\n\n      tasks = tasks.filter(task => {\n        if (filter.status == -1) {\n          return task;\n        } else {\n          return task.status === (filter.status === 1 ? true : false);\n        }\n      });\n    }\n\n    if (keyword && keyword !== \"\") {\n      tasks = tasks.filter(task => {\n        return task.name.indexOf(keyword.keyword) !== -1;\n      });\n    }\n\n    if (sortBy === 'name') {\n      tasks = tasks.sort((a, b) => {\n        if (a.name > b.name) return sortValue;else if (a.name < b.name) return -sortValue;else return 0;\n      });\n    } else {\n      tasks = tasks.sort((a, b) => {\n        if (a.status > b.status) return -sortValue;else if (a.status < b.status) return sortValue;else return 0;\n      });\n    }\n\n    var elmTaskForm = isDisplayForm ? React.createElement(TaskForm, {\n      onSubmit: this.onSubmit,\n      closeForm: this.closeForm,\n      task: tasksEditing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }) : '';\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, \"Qu\\u1EA3n L\\xFD C\\xF4ng Vi\\u1EC7c\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: isDisplayForm ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, elmTaskForm), React.createElement(\"div\", {\n      className: isDisplayForm ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: this.addForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fa fa-plus mr-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }), \"Th\\xEAm C\\xF4ng Vi\\u1EC7c\"), React.createElement(\"div\", {\n      className: \"row mt-15\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(SearchForm, {\n      onSearch: this.onSearch,\n      onSort: this.onSort,\n      sortBy: sortBy,\n      sortValue: sortValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row mt-15\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(ListForm, {\n      tasks: tasks,\n      onUpdateStatus: this.onUpdateStatus,\n      onDelete: this.onDelete,\n      onUpdate: this.onUpdate,\n      onFilter: this.onFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/vinh-lx/Desktop/redux/src/App.js"],"names":["React","TaskForm","SearchForm","ListForm","_","App","Component","constructor","props","onGenerateData","tasks","id","generateID","name","status","setState","localStorage","setItem","JSON","stringify","addForm","state","isDisplayForm","tasksEditing","closeForm","showForm","onSubmit","data","push","index","dindex","onUpdateStatus","findIndex","console","log","index1","result","forEach","task","onDelete","splice","onUpdate","onFilter","filterName","filterStatus","parseInt","filter","toLowerCase","onSearch","keywords","keyword","onSort","sortBy","sortValue","componentWillMount","getItem","parse","s4","Math","floor","random","toString","substring","render","indexOf","sort","a","b","elmTaskForm"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport TaskForm from './components/TaskForm';\nimport SearchForm from './components/SearchForm';\nimport ListForm from './components/ListForm';\nimport _ from 'lodash'\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            tasks: [\n\n            ],\n            tasksEditing: [\n\n            ],\n            isDisplayForm: false\n            ,\n            filter: {\n                name: '',\n                status: -1\n\n            }\n            ,\n            keyword: '',\n            sortBy: 'name',\n            sortValue: 1\n        }\n    }\n    componentWillMount() {\n        if (localStorage && localStorage.getItem('tasks')) {\n            var tasks = JSON.parse(localStorage.getItem('tasks'));\n            this.setState({\n                tasks: tasks\n            });\n        }\n    }\n    onGenerateData = () => {\n        var tasks = [\n            {\n                id: this.generateID(),\n                name: 'Học lạp trình1',\n                status: true\n            },\n\n            {\n                id: this.generateID(),\n                name: 'Học lạp trình2',\n                status: false\n            },\n            {\n                id: this.generateID(),\n                name: 'Học lạp trình3',\n                status: false\n            }\n        ];\n        this.setState({\n            tasks: tasks\n        });\n        localStorage.setItem('tasks', JSON.stringify(tasks));\n    }\n\n    addForm = () => {\n        if (this.state.isDisplayForm && this.state.tasksEditing !== null) {\n            this.setState({\n                isDisplayForm: true,\n                tasksEditing: null\n            })\n        }\n        else {\n            this.setState({\n                isDisplayForm: !this.state.isDisplayForm,\n                tasksEditing: null\n            })\n        }\n\n    }\n\n    closeForm = () => {\n        this.setState({\n            isDisplayForm: !this.state.isDisplayForm\n        })\n    }\n\n    showForm = () => {\n        this.setState({\n            isDisplayForm: true\n        })\n    }\n\n    s4() {\n        return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n    }\n    generateID() {\n        return this.s4() + this.s4() + '_' + this.s4() + '_'\n    }\n    onSubmit = (data) => {\n        var tasks = this.state.tasks;\n        if (data.id === null || data.id === \"\") {\n            data.id = this.generateID();\n            tasks.push(data);\n        }\n        else {\n            var index = this.dindex(data.id);\n            tasks[index] = data;\n        }\n        this.setState(\n            {\n                tasks: tasks,\n                tasksEditing: null\n            }\n        )\n        localStorage.setItem('tasks', JSON.stringify(tasks));\n    }\n    \n    onUpdateStatus = (id) => {\n        var { tasks } = this.state;\n        var index = _.findIndex(tasks , (tasks)=> {\n            return tasks.id === id;\n        });\n        console.log(index , \"0\")\n        var index1 = this.findIndex(id);\n        console.log(index1 , \"1\")\n        if (index !== -1) {\n            tasks[index].status = !tasks[index].status\n            this.setState({\n                tasks: tasks\n            })\n        }\n        localStorage.setItem('tasks', JSON.stringify(tasks));\n\n    }\n    findIndex = (id) => {\n        var { tasks } = this.state;\n        var result = -1;\n        tasks.forEach((task, index) => {\n            if (task.id === id) {\n                result = index;\n            }\n        });\n        return result;\n    }\n    onDelete = (id) => {\n        var { tasks } = this.state;\n        var index = this.findIndex(id);\n        if (index !== -1) {\n            tasks.splice(index, 1);\n            this.setState({\n                tasks: tasks\n            })\n        }\n        localStorage.setItem('tasks', JSON.stringify(tasks));\n        this.closeForm()\n    }\n\n    onUpdate = (id) => {\n        var { tasks } = this.state\n        var index = this.findIndex(id);\n        var tasksEditing = tasks[index]\n        this.setState({\n            tasksEditing: tasksEditing\n        })\n        this.showForm();\n    }\n\n    onFilter = (filterName, filterStatus) => {\n        filterStatus = parseInt(filterStatus)\n        this.setState({\n            filter: {\n                name: filterName.toLowerCase(),\n                status: filterStatus\n            }\n        })\n    }\n\n    onSearch = (keywords) => {\n        this.setState({\n            keyword: keywords\n        })\n    }\n    onSort = (sortBy, sortValue) => {\n        this.setState({\n            sortBy: sortBy,\n            sortValue: sortValue\n        })\n    }\n\n    render() {\n        var { tasks,\n            isDisplayForm,\n            tasksEditing,\n            filter,\n            keyword,\n            sortBy,\n            sortValue\n        }\n            = this.state;\n        if (filter) {\n            if (filter.name) {\n                tasks = tasks.filter(task => {\n                    return task.name.toLowerCase().indexOf(filter.name) !== -1;\n                });\n            }\n            tasks = tasks.filter(task => {\n                if (filter.status == -1) {\n                    return task\n                } else {\n                    return task.status === (filter.status === 1 ? true : false)\n                }\n            })\n        }\n        if (keyword && keyword !== \"\") {\n            tasks = tasks.filter(task => {\n                return task.name.indexOf(keyword.keyword) !== -1;\n            });\n        }\n\n        if (sortBy === 'name'){\n            tasks = tasks.sort((a,b) =>{\n                if(a.name > b.name) return sortValue ;\n                else if(a.name < b.name) return -sortValue ;\n                else return 0 ;\n            })\n        }else{\n            tasks = tasks.sort((a,b) =>{\n                if(a.status > b.status) return -sortValue ;\n                else if(a.status < b.status) return sortValue ;\n                else return 0 ;\n            })\n        }\n        var elmTaskForm = isDisplayForm\n            ? <TaskForm\n                onSubmit={this.onSubmit}\n                closeForm={this.closeForm}\n                task={tasksEditing}\n            />\n            : '';\n        return (\n            <div className=\"container\">\n                <div className=\"text-center\">\n                    <h1>Quản Lý Công Việc</h1>\n                    <hr />\n                </div>\n                <div className=\"row\">\n                    <div className={isDisplayForm ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : ''}>\n                        {elmTaskForm}\n                    </div>\n                    <div className={isDisplayForm ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12'}>\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-primary\"\n                            onClick={this.addForm}\n                        >\n                            <span className=\"fa fa-plus mr-5\"></span>Thêm Công Việc\n              </button>\n                        <div className=\"row mt-15\">\n                            <SearchForm\n                                onSearch={this.onSearch}\n                                onSort={this.onSort}\n                                sortBy={sortBy}\n                                sortValue={sortValue}\n                            />\n                        </div>\n                        <div className=\"row mt-15\">\n                            <ListForm\n                                tasks={tasks}\n                                onUpdateStatus={this.onUpdateStatus}\n                                onDelete={this.onDelete}\n                                onUpdate={this.onUpdate}\n                                onFilter={this.onFilter}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}