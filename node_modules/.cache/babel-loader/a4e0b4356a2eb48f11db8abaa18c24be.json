{"ast":null,"code":"var _jsxFileName = \"/Users/vinh-lx/Desktop/redux/src/components/TaskForm.js\";\nimport React from 'react';\n\nclass TaskForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.closeForm = () => {\n      this.props.closeForm();\n    };\n\n    this.onChange = event => {\n      var target = event.target;\n      var name = target.name;\n      var value = target.value;\n\n      if (name === 'status') {\n        value = target.value === \"true\" ? true : false;\n      }\n\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.onSubmit = event => {\n      event.preventDefault();\n      this.props.onSubmit(this.state);\n      this.onClear();\n      this.closeForm();\n    };\n\n    this.onClear = () => {\n      this.setState({\n        name: '',\n        status: false\n      });\n    };\n\n    this.state = {\n      id: '',\n      name: '',\n      status: false\n    };\n  }\n\n  componentWillMount() {\n    if (this.props.task) {\n      this.setState({\n        id: this.props.task.id,\n        name: this.props.task.name,\n        status: this.props.task.status\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps && nextProps.task) {\n      this.setState({\n        id: nextProps.task.id,\n        name: nextProps.task.name,\n        status: nextProps.task.status\n      });\n    }\n\n    elseif(nextProps && nextProps.task === null);\n    {\n      console.log(nextProps);\n      console.log(nextProps.task);\n    }\n  }\n\n  render() {\n    var id = this.state.id;\n    return React.createElement(\"div\", {\n      className: \"panel panel-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"panel-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"panel-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, id == null ? 'Thêm Công Việc' : '\bCập nhật công việc ', React.createElement(\"span\", {\n      className: \"fa fa-times-circle text-right\",\n      onClick: this.closeForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"panel-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"T\\xEAn :\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"name\",\n      value: this.state.name,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Tr\\u1EA1ng Th\\xE1i :\"), React.createElement(\"select\", {\n      className: \"form-control\",\n      required: \"required\",\n      name: \"status\",\n      value: this.state.status,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"K\\xEDch Ho\\u1EA1t\"), React.createElement(\"option\", {\n      value: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"\\u1EA8n\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Th\\xEAm\"), \"\\xA0\", React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.onClear,\n      className: \"btn btn-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"H\\u1EE7y B\\u1ECF\")))));\n  }\n\n}\n\nexport default TaskForm;","map":{"version":3,"sources":["/Users/vinh-lx/Desktop/redux/src/components/TaskForm.js"],"names":["React","TaskForm","Component","constructor","props","closeForm","onChange","event","target","name","value","setState","onSubmit","preventDefault","state","onClear","status","id","componentWillMount","task","componentWillReceiveProps","nextProps","elseif","console","log","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass TaskForm extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            id : '',\n            name : '',\n            status: false\n        }\n    }\n    componentWillMount(){\n        if(this.props.task){\n             this.setState({\n                 id : this.props.task.id,\n                 name : this.props.task.name,\n                 status : this.props.task.status\n             })\n        }\n    }\n    componentWillReceiveProps(nextProps){\n        if(nextProps && nextProps.task ){\n            this.setState({\n                id: nextProps.task.id,\n                name: nextProps.task.name,\n                status: nextProps.task.status\n            })\n        }elseif(nextProps && nextProps.task === null)\n        {\n            console.log(nextProps)\n            console.log(nextProps.task )\n        }\n    }\n    closeForm =() =>{\n        this.props.closeForm()\n    }\n    onChange =(event)=>{\n        var target = event.target;\n        var name = target.name;\n        var value = target.value\n        if(name ==='status' ){\n            value = target.value === \"true\" ?  true :  false\n        }\n        this.setState({\n        [name] : value\n        });\n    }\n    onSubmit =(event) =>{\n        event.preventDefault();\n         this.props.onSubmit(this.state);\n         this.onClear();\n         this.closeForm();\n    }\n    onClear =() =>{\n        this.setState({\n            name : '',\n            status: false\n        })\n    }\n    render() {\n        var { id } = this.state;\n  return (\n    <div className=\"panel panel-warning\">\n        <div className=\"panel-heading\">\n            <h3 className=\"panel-title\">\n            { id == null ?  'Thêm Công Việc' : '\bCập nhật công việc '} \n            <span \n            className=\"fa fa-times-circle text-right\" \n            onClick ={this.closeForm }\n            >\n                 </span>\n            </h3>   \n        </div>\n        <div className=\"panel-body\">\n            <form \n            onSubmit={this.onSubmit}\n             >\n                <div className=\"form-group\">\n                    <label>Tên :</label>\n                    <input \n                    type=\"text\" \n                    className=\"form-control\" \n                    name=\"name\" \n                    value = {this.state.name}\n                    onChange = {this.onChange}\n                    />\n                </div>\n                <label>Trạng Thái :</label>\n                <select \n                    className=\"form-control\" \n                    required=\"required\"\n                    name=\"status\" \n                    value = {this.state.status}\n                    onChange = {this.onChange}\n                    >\n                    <option value={true}>Kích Hoạt</option>\n                    <option value={false}>Ẩn</option>\n                </select>\n                <br/>\n                <div className=\"text-center\">\n                    <button type=\"submit\" className=\"btn btn-warning\">Thêm</button>&nbsp;\n                    <button \n                        type=\"button\"\n                        onClick={this.onClear} \n                        className=\"btn btn-danger\">\n                            Hủy Bỏ\n                    </button>\n                </div>\n            </form>\n        </div>\n    </div>\n  );\n}\n}\n\nexport default TaskForm;\n"]},"metadata":{},"sourceType":"module"}