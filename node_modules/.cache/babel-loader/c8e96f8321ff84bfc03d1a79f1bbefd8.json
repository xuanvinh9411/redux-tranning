{"ast":null,"code":"var _jsxFileName = \"/Users/vinh-lx/Desktop/redux/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport TaskForm from './components/TaskForm';\nimport SearchForm from './components/SearchForm';\nimport ListForm from './components/ListForm';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onGenerateData = () => {\n      var tasks = [{\n        id: this.generateID(),\n        name: 'Học lạp trình1',\n        status: true\n      }, {\n        id: this.generateID(),\n        name: 'Học lạp trình2',\n        status: false\n      }, {\n        id: this.generateID(),\n        name: 'Học lạp trình3',\n        status: false\n      }];\n      this.setState({\n        tasks: tasks\n      });\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    this.addForm = () => {\n      if (this.state.isDisplayForm && this.state.tasksEditing !== null) {} else {\n        this.setState({\n          isDisplayForm: !this.state.isDisplayForm,\n          tasksEditing: null\n        });\n      }\n    };\n\n    this.closeForm = () => {\n      this.setState({\n        isDisplayForm: !this.state.isDisplayForm\n      });\n    };\n\n    this.showForm = () => {\n      this.setState({\n        isDisplayForm: true\n      });\n    };\n\n    this.onSubmit = data => {\n      var tasks = this.state.tasks;\n\n      if (data.id == null) {\n        data.id = this.generateID();\n        tasks.push(data);\n      } else {\n        var index = this.findIndex(data.id);\n        tasks[index] = data;\n      }\n\n      this.setState({\n        tasks: tasks,\n        tasksEditing: null\n      });\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    this.onUpdateStatus = id => {\n      var tasks = this.state.tasks;\n      var index = this.findIndex(id);\n\n      if (index !== -1) {\n        tasks[index].status = !tasks[index].status;\n        this.setState({\n          tasks: tasks\n        });\n      }\n\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    this.findIndex = id => {\n      var tasks = this.state.tasks;\n      var result = -1;\n      tasks.forEach((task, index) => {\n        if (task.id === id) {\n          result = index;\n        }\n      });\n      return result;\n    };\n\n    this.onDelete = id => {\n      var tasks = this.state.tasks;\n      var index = this.findIndex(id);\n\n      if (index !== -1) {\n        tasks.splice(index, 1);\n        this.setState({\n          tasks: tasks\n        });\n      }\n\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n      this.closeForm();\n    };\n\n    this.onUpdate = id => {\n      var tasks = this.state.tasks;\n      var index = this.findIndex(id);\n      var tasksEditing = tasks[index];\n      this.setState({\n        tasksEditing: tasksEditing\n      });\n      this.showForm();\n    };\n\n    this.state = {\n      tasks: [],\n      tasksEditing: [],\n      isDisplayForm: false\n    };\n  }\n\n  componentWillMount() {\n    if (localStorage && localStorage.getItem('tasks')) {\n      var tasks = JSON.parse(localStorage.getItem('tasks'));\n      this.setState({\n        tasks: tasks\n      });\n    }\n  }\n\n  s4() {\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n  }\n\n  generateID() {\n    return this.s4() + this.s4() + '_' + this.s4() + '_';\n  }\n\n  render() {\n    var _this$state = this.state,\n        tasks = _this$state.tasks,\n        isDisplayForm = _this$state.isDisplayForm,\n        tasksEditing = _this$state.tasksEditing;\n    var elmTaskForm = isDisplayForm ? React.createElement(TaskForm, {\n      onSubmit: this.onSubmit,\n      closeForm: this.closeForm,\n      task: tasksEditing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }) : '';\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Qu\\u1EA3n L\\xFD C\\xF4ng Vi\\u1EC7c\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: isDisplayForm ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, elmTaskForm), React.createElement(\"div\", {\n      className: isDisplayForm ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: this.addForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fa fa-plus mr-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), \"Th\\xEAm C\\xF4ng Vi\\u1EC7c\"), React.createElement(\"div\", {\n      className: \"row mt-15\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(SearchForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row mt-15\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(ListForm, {\n      tasks: tasks,\n      onUpdateStatus: this.onUpdateStatus,\n      onDelete: this.onDelete,\n      onUpdate: this.onUpdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/vinh-lx/Desktop/redux/src/App.js"],"names":["React","TaskForm","SearchForm","ListForm","App","Component","constructor","props","onGenerateData","tasks","id","generateID","name","status","setState","localStorage","setItem","JSON","stringify","addForm","state","isDisplayForm","tasksEditing","closeForm","showForm","onSubmit","data","push","index","findIndex","onUpdateStatus","result","forEach","task","onDelete","splice","onUpdate","componentWillMount","getItem","parse","s4","Math","floor","random","toString","substring","render","elmTaskForm"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAE9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAqBnBC,cArBmB,GAqBF,MAAK;AAClB,UAAIC,KAAK,GAAG,CACX;AAAGC,QAAAA,EAAE,EAAE,KAAKC,UAAL,EAAP;AACGC,QAAAA,IAAI,EAAG,gBADV;AAEGC,QAAAA,MAAM,EAAG;AAFZ,OADW,EAMZ;AAAIH,QAAAA,EAAE,EAAE,KAAKC,UAAL,EAAR;AACIC,QAAAA,IAAI,EAAG,gBADX;AAEIC,QAAAA,MAAM,EAAG;AAFb,OANY,EAUX;AAAEH,QAAAA,EAAE,EAAE,KAAKC,UAAL,EAAN;AACGC,QAAAA,IAAI,EAAG,gBADV;AAEGC,QAAAA,MAAM,EAAG;AAFZ,OAVW,CAAZ;AAcA,WAAKC,QAAL,CAAc;AACVL,QAAAA,KAAK,EAAGA;AADE,OAAd;AAGAM,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeT,KAAf,CAA7B;AACH,KAxCkB;;AAAA,SA0CnBU,OA1CmB,GA0CT,MAAI;AACV,UAAG,KAAKC,KAAL,CAAWC,aAAX,IAA4B,KAAKD,KAAL,CAAWE,YAAX,KAA4B,IAA3D,EAAiE,CAEhE,CAFD,MAGI;AACA,aAAKR,QAAL,CAAc;AACVO,UAAAA,aAAa,EAAG,CAAC,KAAKD,KAAL,CAAWC,aADlB;AAEVC,UAAAA,YAAY,EAAG;AAFL,SAAd;AAIH;AAEJ,KArDkB;;AAAA,SAuDnBC,SAvDmB,GAuDP,MAAI;AACZ,WAAKT,QAAL,CAAc;AACVO,QAAAA,aAAa,EAAG,CAAC,KAAKD,KAAL,CAAWC;AADlB,OAAd;AAGH,KA3DkB;;AAAA,SA6DnBG,QA7DmB,GA6DT,MAAK;AACX,WAAKV,QAAL,CAAc;AACVO,QAAAA,aAAa,EAAG;AADN,OAAd;AAGH,KAjEkB;;AAAA,SAyEnBI,QAzEmB,GAyEPC,IAAD,IAAS;AAChB,UAAIjB,KAAK,GAAI,KAAKW,KAAL,CAAWX,KAAxB;;AACA,UAAGiB,IAAI,CAAChB,EAAL,IAAW,IAAd,EAAmB;AACPgB,QAAAA,IAAI,CAAChB,EAAL,GAAU,KAAKC,UAAL,EAAV;AACZF,QAAAA,KAAK,CAACkB,IAAN,CAAWD,IAAX;AACC,OAHD,MAIK;AACD,YAAIE,KAAK,GAAG,KAAKC,SAAL,CAAeH,IAAI,CAAChB,EAApB,CAAZ;AACAD,QAAAA,KAAK,CAACmB,KAAD,CAAL,GAAeF,IAAf;AACH;;AACD,WAAKZ,QAAL,CACI;AACIL,QAAAA,KAAK,EAAGA,KADZ;AAEIa,QAAAA,YAAY,EAAG;AAFnB,OADJ;AAMAP,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeT,KAAf,CAA7B;AACH,KA1FkB;;AAAA,SA2FnBqB,cA3FmB,GA2FFpB,EAAD,IAAO;AAAA,UACbD,KADa,GACH,KAAKW,KADF,CACbX,KADa;AAEnB,UAAImB,KAAK,GAAG,KAAKC,SAAL,CAAenB,EAAf,CAAZ;;AACA,UAAGkB,KAAK,KAAK,CAAC,CAAd,EAAgB;AACZnB,QAAAA,KAAK,CAACmB,KAAD,CAAL,CAAaf,MAAb,GAAsB,CAACJ,KAAK,CAACmB,KAAD,CAAL,CAAaf,MAApC;AACA,aAAKC,QAAL,CAAc;AACVL,UAAAA,KAAK,EAAEA;AADG,SAAd;AAGH;;AACDM,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeT,KAAf,CAA7B;AAEH,KAtGkB;;AAAA,SAuGnBoB,SAvGmB,GAuGPnB,EAAD,IAAO;AAAA,UACRD,KADQ,GACE,KAAKW,KADP,CACRX,KADQ;AAEd,UAAIsB,MAAM,GAAG,CAAC,CAAd;AACAtB,MAAAA,KAAK,CAACuB,OAAN,CAAc,CAACC,IAAD,EAAML,KAAN,KAAe;AACzB,YAAGK,IAAI,CAACvB,EAAL,KAAYA,EAAf,EAAkB;AACdqB,UAAAA,MAAM,GAAIH,KAAV;AACH;AACJ,OAJD;AAKA,aAAOG,MAAP;AACH,KAhHkB;;AAAA,SAiHnBG,QAjHmB,GAiHRxB,EAAD,IAAO;AAAA,UACPD,KADO,GACG,KAAKW,KADR,CACPX,KADO;AAEb,UAAImB,KAAK,GAAG,KAAKC,SAAL,CAAenB,EAAf,CAAZ;;AACA,UAAGkB,KAAK,KAAK,CAAC,CAAd,EAAgB;AACZnB,QAAAA,KAAK,CAAC0B,MAAN,CAAaP,KAAb,EAAqB,CAArB;AACA,aAAKd,QAAL,CAAc;AACVL,UAAAA,KAAK,EAAEA;AADG,SAAd;AAGH;;AACDM,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeT,KAAf,CAA7B;AACA,WAAKc,SAAL;AACH,KA5HkB;;AAAA,SA8HnBa,QA9HmB,GA8HR1B,EAAD,IAAO;AAAA,UACPD,KADO,GACG,KAAKW,KADR,CACPX,KADO;AAEb,UAAImB,KAAK,GAAG,KAAKC,SAAL,CAAenB,EAAf,CAAZ;AACA,UAAIY,YAAY,GAAGb,KAAK,CAACmB,KAAD,CAAxB;AACA,WAAKd,QAAL,CAAc;AACVQ,QAAAA,YAAY,EAAGA;AADL,OAAd;AAGA,WAAKE,QAAL;AACH,KAtIkB;;AAEf,SAAKJ,KAAL,GAAa;AACTX,MAAAA,KAAK,EAAG,EADC;AAITa,MAAAA,YAAY,EAAG,EAJN;AAQTD,MAAAA,aAAa,EAAG;AARP,KAAb;AAUH;;AACDgB,EAAAA,kBAAkB,GAAE;AAChB,QAAGtB,YAAY,IAAIA,YAAY,CAACuB,OAAb,CAAqB,OAArB,CAAnB,EAAiD;AAC7C,UAAI7B,KAAK,GAAGQ,IAAI,CAACsB,KAAL,CAAWxB,YAAY,CAACuB,OAAb,CAAqB,OAArB,CAAX,CAAZ;AACA,WAAKxB,QAAL,CAAc;AACVL,QAAAA,KAAK,EAAGA;AADE,OAAd;AAGH;AACJ;;AA+CD+B,EAAAA,EAAE,GAAE;AACA,WAAOC,IAAI,CAACC,KAAL,CAAW,CAAC,IAAID,IAAI,CAACE,MAAL,EAAL,IAAsB,OAAjC,EAA0CC,QAA1C,CAAmD,EAAnD,EAAuDC,SAAvD,CAAiE,CAAjE,CAAP;AACH;;AACDlC,EAAAA,UAAU,GAAE;AACR,WAAO,KAAK6B,EAAL,KAAY,KAAKA,EAAL,EAAZ,GAAwB,GAAxB,GAA8B,KAAKA,EAAL,EAA9B,GAA0C,GAAjD;AACH;;AAgEHM,EAAAA,MAAM,GAAG;AAAA,sBACoC,KAAK1B,KADzC;AAAA,QACAX,KADA,eACAA,KADA;AAAA,QACMY,aADN,eACMA,aADN;AAAA,QACoBC,YADpB,eACoBA,YADpB;AAEL,QAAIyB,WAAW,GAAG1B,aAAa,GAC7B,oBAAC,QAAD;AACI,MAAA,QAAQ,EAAK,KAAKI,QADtB;AAEI,MAAA,SAAS,EAAK,KAAKF,SAFvB;AAGI,MAAA,IAAI,EAAKD,YAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD6B,GAM7B,EANF;AAOJ,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADA,EAKA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAED,aAAa,GAAG,qCAAH,GAA2C,EAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI0B,WADJ,CADJ,EAII;AAAK,MAAA,SAAS,EAAG1B,aAAa,GAAG,qCAAH,GAA2C,yCAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACA,MAAA,IAAI,EAAC,QADL;AAEA,MAAA,SAAS,EAAC,iBAFV;AAGA,MAAA,OAAO,EAAK,KAAKF,OAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKI;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,8BADJ,EAQI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CARJ,EAWI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,QAAD;AACC,MAAA,KAAK,EAAKV,KADX;AAEC,MAAA,cAAc,EAAK,KAAKqB,cAFzB;AAGC,MAAA,QAAQ,EAAK,KAAKI,QAHnB;AAIC,MAAA,QAAQ,EAAK,KAAKE,QAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CAXJ,CAJJ,CALA,CADJ;AAiCD;;AApLiC;;AAuLlC,eAAehC,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport TaskForm from './components/TaskForm';\nimport SearchForm from './components/SearchForm';\nimport ListForm from './components/ListForm';\n\nclass App extends React.Component {\n\n    constructor(props) { \n        super(props);\n        this.state = {\n            tasks : [\n\n            ],\n            tasksEditing : [\n\n            ],\n\n            isDisplayForm : false\n        }\n    }   \n    componentWillMount(){\n        if(localStorage && localStorage.getItem('tasks')){\n            var tasks = JSON.parse(localStorage.getItem('tasks'));\n            this.setState({\n                tasks : tasks\n            });\n        }\n    } \n    onGenerateData = () =>{\n        var tasks = [\n         {  id: this.generateID(), \n            name : 'Học lạp trình1',\n            status : true  \n         },\n\n        {   id: this.generateID(), \n            name : 'Học lạp trình2',\n            status : false  \n         },\n         { id: this.generateID(), \n            name : 'Học lạp trình3',\n            status : false   }\n        ];\n        this.setState({\n            tasks : tasks\n        });\n        localStorage.setItem('tasks',JSON.stringify(tasks));\n    }\n\n    addForm = ()=>{\n        if(this.state.isDisplayForm && this.state.tasksEditing !== null ){\n\n        }\n        else{\n            this.setState({\n                isDisplayForm : !this.state.isDisplayForm,\n                tasksEditing : null\n            })\n        }\n\n    }\n\n    closeForm = ()=>{\n        this.setState({\n            isDisplayForm : !this.state.isDisplayForm\n        })\n    }\n\n    showForm =() =>{\n        this.setState({\n            isDisplayForm : true\n        })\n    }\n\n    s4(){\n        return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n    }\n    generateID(){\n        return this.s4() + this.s4() + '_' + this.s4() + '_'\n    }\n    onSubmit = (data) =>{\n        var tasks =  this.state.tasks;\n        if(data.id == null){\n                    data.id = this.generateID();\n        tasks.push(data);\n        }\n        else {\n            var index = this.findIndex(data.id);\n            tasks[index] = data;\n        }\n        this.setState(\n            {\n                tasks : tasks,\n                tasksEditing : null\n            }\n        )\n        localStorage.setItem('tasks',JSON.stringify(tasks));\n    }\n    onUpdateStatus =(id) =>{\n        var { tasks } = this.state;\n        var index = this.findIndex(id);\n        if(index !== -1){\n            tasks[index].status = !tasks[index].status\n            this.setState({\n                tasks: tasks\n            })\n        }\n        localStorage.setItem('tasks',JSON.stringify(tasks));\n\n    }\n    findIndex =(id) =>{\n        var { tasks } = this.state;\n        var result = -1;\n        tasks.forEach((task,index) =>{\n            if(task.id === id){\n                result =  index;\n            }\n        });\n        return result;\n    }\n    onDelete =(id) =>{\n        var { tasks } = this.state;\n        var index = this.findIndex(id);\n        if(index !== -1){\n            tasks.splice(index , 1);\n            this.setState({\n                tasks: tasks\n            })\n        }\n        localStorage.setItem('tasks',JSON.stringify(tasks));\n        this.closeForm()\n    }\n\n    onUpdate =(id) =>{\n        var { tasks } = this.state\n        var index = this.findIndex(id);\n        var tasksEditing = tasks[index]\n        this.setState({\n            tasksEditing : tasksEditing\n        })\n        this.showForm();\n    }\n\n  render() {\n      var {tasks,isDisplayForm,tasksEditing} = this.state;\n      var elmTaskForm = isDisplayForm \n      ? <TaskForm \n            onSubmit = { this.onSubmit }\n            closeForm = { this.closeForm } \n            task = { tasksEditing }\n             /> \n      : '';\n  return (\n      <div className=\"container\">\n      <div className=\"text-center\">\n          <h1>Quản Lý Công Việc</h1>\n          <hr/>\n      </div>\n      <div className=\"row\">\n          <div className={isDisplayForm ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : ''}>\n             {elmTaskForm}\n          </div>\n          <div className= {isDisplayForm ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12'}>\n              <button \n              type=\"button\" \n              className=\"btn btn-primary\"\n              onClick = { this.addForm}\n              >\n                  <span className=\"fa fa-plus mr-5\"></span>Thêm Công Việc\n              </button>\n              <div className=\"row mt-15\">\n                  <SearchForm></SearchForm>\n              </div>\n              <div className=\"row mt-15\">\n                 <ListForm\n                  tasks = { tasks }\n                  onUpdateStatus = { this.onUpdateStatus }\n                  onDelete = { this.onDelete }\n                  onUpdate = { this.onUpdate }\n                  />\n              </div>\n          </div>\n      </div>\n    </div>\n  );\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}