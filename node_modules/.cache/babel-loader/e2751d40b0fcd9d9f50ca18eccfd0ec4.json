{"ast":null,"code":"var _jsxFileName = \"/Users/vinh-lx/Desktop/redux/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport TaskForm from './components/TaskForm';\nimport SearchForm from './components/SearchForm';\nimport ListForm from './components/ListForm';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onGenerateData = () => {\n      var tasks = [{\n        id: this.generateID(),\n        name: 'Học lạp trình1',\n        status: true\n      }, {\n        id: this.generateID(),\n        name: 'Học lạp trình2',\n        status: false\n      }, {\n        id: this.generateID(),\n        name: 'Học lạp trình3',\n        status: false\n      }];\n      this.setState({\n        tasks: tasks\n      });\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    this.addForm = () => {\n      if (this.state.isDisplayForm && this.state.tasksEditing !== null) {\n        this.setState({\n          isDisplayForm: true,\n          tasksEditing: null\n        });\n      } else {\n        this.setState({\n          isDisplayForm: !this.state.isDisplayForm,\n          tasksEditing: null\n        });\n      }\n    };\n\n    this.closeForm = () => {\n      this.setState({\n        isDisplayForm: !this.state.isDisplayForm\n      });\n    };\n\n    this.showForm = () => {\n      this.setState({\n        isDisplayForm: true\n      });\n    };\n\n    this.onSubmit = data => {\n      var tasks = this.state.tasks;\n\n      if (data.id === null || data.id === \"\") {\n        data.id = this.generateID();\n        tasks.push(data);\n      } else {\n        var index = this.findIndex(data.id);\n        tasks[index] = data;\n      }\n\n      this.setState({\n        tasks: tasks,\n        tasksEditing: null\n      });\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    this.onUpdateStatus = id => {\n      var tasks = this.state.tasks;\n      var index = this.findIndex(id);\n\n      if (index !== -1) {\n        tasks[index].status = !tasks[index].status;\n        this.setState({\n          tasks: tasks\n        });\n      }\n\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    this.findIndex = id => {\n      var tasks = this.state.tasks;\n      var result = -1;\n      tasks.forEach((task, index) => {\n        if (task.id === id) {\n          result = index;\n        }\n      });\n      return result;\n    };\n\n    this.onDelete = id => {\n      var tasks = this.state.tasks;\n      var index = this.findIndex(id);\n\n      if (index !== -1) {\n        tasks.splice(index, 1);\n        this.setState({\n          tasks: tasks\n        });\n      }\n\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n      this.closeForm();\n    };\n\n    this.onUpdate = id => {\n      var tasks = this.state.tasks;\n      var index = this.findIndex(id);\n      var tasksEditing = tasks[index];\n      this.setState({\n        tasksEditing: tasksEditing\n      });\n      this.showForm();\n    };\n\n    this.onFilter = (filterName, filterStatus) => {\n      filterStatus = parseInt(filterStatus);\n      this.setState({\n        filter: {\n          name: filterName.toLowerCase(),\n          status: filterStatus\n        }\n      });\n    };\n\n    this.onSearch = keywords => {\n      this.setState({\n        keyword: keywords\n      });\n    };\n\n    this.onSort = (sortBy, sortValue) => {\n      this.setState({\n        sortBy: sortBy,\n        sortValue: sortValue\n      }); // console.log(this.state.sortBy,this.state.sortValue)\n\n      console.log(sortBy, sortValue);\n    };\n\n    this.state = {\n      tasks: [],\n      tasksEditing: [],\n      isDisplayForm: false,\n      filter: {\n        name: '',\n        status: -1\n      },\n      keyword: '',\n      sortBy: 'name',\n      sortValue: 1\n    };\n  }\n\n  componentWillMount() {\n    if (localStorage && localStorage.getItem('tasks')) {\n      var tasks = JSON.parse(localStorage.getItem('tasks'));\n      this.setState({\n        tasks: tasks\n      });\n    }\n  }\n\n  s4() {\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n  }\n\n  generateID() {\n    return this.s4() + this.s4() + '_' + this.s4() + '_';\n  }\n\n  render() {\n    var _this$state = this.state,\n        tasks = _this$state.tasks,\n        isDisplayForm = _this$state.isDisplayForm,\n        tasksEditing = _this$state.tasksEditing,\n        filter = _this$state.filter,\n        keyword = _this$state.keyword;\n\n    if (filter) {\n      if (filter.name) {\n        tasks = tasks.filter(task => {\n          return task.name.toLowerCase().indexOf(filter.name) !== -1;\n        });\n      }\n\n      tasks = tasks.filter(task => {\n        if (filter.status == -1) {\n          return task;\n        } else {\n          return task.status === (filter.status === 1 ? true : false);\n        }\n      });\n    }\n\n    if (keyword && keyword !== \"\") {\n      tasks = tasks.filter(task => {\n        return task.name.indexOf(keyword.keyword) !== -1;\n      });\n    }\n\n    var elmTaskForm = isDisplayForm ? React.createElement(TaskForm, {\n      onSubmit: this.onSubmit,\n      closeForm: this.closeForm,\n      task: tasksEditing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }) : '';\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Qu\\u1EA3n L\\xFD C\\xF4ng Vi\\u1EC7c\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: isDisplayForm ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, elmTaskForm), React.createElement(\"div\", {\n      className: isDisplayForm ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: this.addForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fa fa-plus mr-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }), \"Th\\xEAm C\\xF4ng Vi\\u1EC7c\"), React.createElement(\"div\", {\n      className: \"row mt-15\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(SearchForm, {\n      onSearch: this.onSearch,\n      onSort: this.onSort,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row mt-15\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(ListForm, {\n      tasks: tasks,\n      onUpdateStatus: this.onUpdateStatus,\n      onDelete: this.onDelete,\n      onUpdate: this.onUpdate,\n      onFilter: this.onFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/vinh-lx/Desktop/redux/src/App.js"],"names":["React","TaskForm","SearchForm","ListForm","App","Component","constructor","props","onGenerateData","tasks","id","generateID","name","status","setState","localStorage","setItem","JSON","stringify","addForm","state","isDisplayForm","tasksEditing","closeForm","showForm","onSubmit","data","push","index","findIndex","onUpdateStatus","result","forEach","task","onDelete","splice","onUpdate","onFilter","filterName","filterStatus","parseInt","filter","toLowerCase","onSearch","keywords","keyword","onSort","sortBy","sortValue","console","log","componentWillMount","getItem","parse","s4","Math","floor","random","toString","substring","render","indexOf","elmTaskForm"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport TaskForm from './components/TaskForm';\nimport SearchForm from './components/SearchForm';\nimport ListForm from './components/ListForm';\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            tasks: [\n\n            ],\n            tasksEditing: [\n\n            ],\n            isDisplayForm: false\n            ,\n            filter :{\n                name : '',\n                status: -1\n                \n            }\n            ,\n            keyword : '',\n            sortBy : 'name',\n            sortValue : 1\n        }\n    }\n    componentWillMount() {\n        if (localStorage && localStorage.getItem('tasks')) {\n            var tasks = JSON.parse(localStorage.getItem('tasks'));\n            this.setState({\n                tasks: tasks\n            });\n        }\n    }\n    onGenerateData = () => {\n        var tasks = [\n            {\n                id: this.generateID(),\n                name: 'Học lạp trình1',\n                status: true\n            },\n\n            {\n                id: this.generateID(),\n                name: 'Học lạp trình2',\n                status: false\n            },\n            {\n                id: this.generateID(),\n                name: 'Học lạp trình3',\n                status: false\n            }\n        ];\n        this.setState({\n            tasks: tasks\n        });\n        localStorage.setItem('tasks', JSON.stringify(tasks));\n    }\n\n    addForm = () => {\n        if (this.state.isDisplayForm && this.state.tasksEditing !== null) {\n            this.setState({\n                isDisplayForm: true,\n                tasksEditing: null\n            })\n        }\n        else {\n            this.setState({\n                isDisplayForm: !this.state.isDisplayForm,\n                tasksEditing: null\n            })\n        }\n\n    }\n\n    closeForm = () => {\n        this.setState({\n            isDisplayForm: !this.state.isDisplayForm\n        })\n    }\n\n    showForm = () => {\n        this.setState({\n            isDisplayForm: true\n        })\n    }\n\n    s4() {\n        return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n    }\n    generateID() {\n        return this.s4() + this.s4() + '_' + this.s4() + '_'\n    }\n    onSubmit = (data) => {\n        var tasks = this.state.tasks;\n        if (data.id === null || data.id === \"\") {\n            data.id = this.generateID();\n            tasks.push(data);\n        }\n        else {\n            var index = this.findIndex(data.id);\n            tasks[index] = data;\n        }\n        this.setState(\n            {\n                tasks: tasks,\n                tasksEditing: null\n            }\n        )\n        localStorage.setItem('tasks', JSON.stringify(tasks));\n    }\n    onUpdateStatus = (id) => {\n        var { tasks } = this.state;\n        var index = this.findIndex(id);\n        if (index !== -1) {\n            tasks[index].status = !tasks[index].status\n            this.setState({\n                tasks: tasks\n            })\n        }\n        localStorage.setItem('tasks', JSON.stringify(tasks));\n\n    }\n    findIndex = (id) => {\n        var { tasks } = this.state;\n        var result = -1;\n        tasks.forEach((task, index) => {\n            if (task.id === id) {\n                result = index;\n            }\n        });\n        return result;\n    }\n    onDelete = (id) => {\n        var { tasks } = this.state;\n        var index = this.findIndex(id);\n        if (index !== -1) {\n            tasks.splice(index, 1);\n            this.setState({\n                tasks: tasks\n            })\n        }\n        localStorage.setItem('tasks', JSON.stringify(tasks));\n        this.closeForm()\n    }\n\n    onUpdate = (id) => {\n        var { tasks } = this.state\n        var index = this.findIndex(id);\n        var tasksEditing = tasks[index]\n        this.setState({\n            tasksEditing: tasksEditing\n        })\n        this.showForm();\n    }\n\n    onFilter = (filterName,filterStatus) => {\n        filterStatus =  parseInt(filterStatus)\n        this.setState({\n            filter : {\n                name : filterName.toLowerCase(),\n                status : filterStatus\n            }\n        })\n    }\n\n    onSearch =(keywords) =>{\n        this.setState({\n            keyword : keywords\n        })\n    }\n    onSort =(sortBy,sortValue) =>{\n        this.setState({\n            sortBy : sortBy,\n            sortValue : sortValue\n        })\n        // console.log(this.state.sortBy,this.state.sortValue)\n        console.log(sortBy,sortValue)\n    }\n\n    render() {\n        var { tasks, isDisplayForm, tasksEditing , filter ,keyword } = this.state;\n            if(filter){\n                if(filter.name){\n                    tasks = tasks.filter( task => {\n                         return task.name.toLowerCase().indexOf(filter.name) !== -1 ;\n                    });\n                }\n                tasks = tasks.filter(task =>{\n                    if(filter.status == -1){\n                        return task\n                    }else{\n                        return task.status === (filter.status === 1 ? true : false)\n                    }\n                })\n            }\n            if(keyword && keyword !== \"\"){\n                tasks = tasks.filter( task => {\n                    return task.name.indexOf(keyword.keyword) !== -1;\n               });\n            }\n\n\n        var elmTaskForm = isDisplayForm\n            ? <TaskForm\n                onSubmit={this.onSubmit}\n                closeForm={this.closeForm}\n                task={tasksEditing}\n            />\n            : '';\n        return (\n            <div className=\"container\">\n                <div className=\"text-center\">\n                    <h1>Quản Lý Công Việc</h1>\n                    <hr />\n                </div>\n                <div className=\"row\">\n                    <div className={isDisplayForm ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : ''}>\n                        {elmTaskForm}\n                    </div>\n                    <div className={isDisplayForm ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12'}>\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-primary\"\n                            onClick={this.addForm}\n                        >\n                            <span className=\"fa fa-plus mr-5\"></span>Thêm Công Việc\n              </button>\n                        <div className=\"row mt-15\">\n                            <SearchForm\n                            onSearch = {this.onSearch}\n                            onSort =  {this.onSort}\n                            />\n                        </div>\n                        <div className=\"row mt-15\">\n                            <ListForm\n                                tasks={tasks}\n                                onUpdateStatus={this.onUpdateStatus}\n                                onDelete={this.onDelete}\n                                onUpdate={this.onUpdate}\n                                onFilter={this.onFilter}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}